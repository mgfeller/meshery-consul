// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: meshops.proto

package meshes

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OpCategory int32

const (
	OpCategory_INSTALL            OpCategory = 0
	OpCategory_SAMPLE_APPLICATION OpCategory = 1
	OpCategory_CONFIGURE          OpCategory = 2
	OpCategory_VALIDATE           OpCategory = 3
	OpCategory_CUSTOM             OpCategory = 4
)

// Enum value maps for OpCategory.
var (
	OpCategory_name = map[int32]string{
		0: "INSTALL",
		1: "SAMPLE_APPLICATION",
		2: "CONFIGURE",
		3: "VALIDATE",
		4: "CUSTOM",
	}
	OpCategory_value = map[string]int32{
		"INSTALL":            0,
		"SAMPLE_APPLICATION": 1,
		"CONFIGURE":          2,
		"VALIDATE":           3,
		"CUSTOM":             4,
	}
)

func (x OpCategory) Enum() *OpCategory {
	p := new(OpCategory)
	*p = x
	return p
}

func (x OpCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_meshops_proto_enumTypes[0].Descriptor()
}

func (OpCategory) Type() protoreflect.EnumType {
	return &file_meshops_proto_enumTypes[0]
}

func (x OpCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpCategory.Descriptor instead.
func (OpCategory) EnumDescriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{0}
}

type EventType int32

const (
	EventType_INFO  EventType = 0
	EventType_WARN  EventType = 1
	EventType_ERROR EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "INFO",
		1: "WARN",
		2: "ERROR",
	}
	EventType_value = map[string]int32{
		"INFO":  0,
		"WARN":  1,
		"ERROR": 2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_meshops_proto_enumTypes[1].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_meshops_proto_enumTypes[1]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{1}
}

type CreateMeshInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K8SConfig   []byte `protobuf:"bytes,1,opt,name=k8sConfig,proto3" json:"k8sConfig,omitempty"`
	ContextName string `protobuf:"bytes,2,opt,name=contextName,proto3" json:"contextName,omitempty"`
}

func (x *CreateMeshInstanceRequest) Reset() {
	*x = CreateMeshInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeshInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeshInstanceRequest) ProtoMessage() {}

func (x *CreateMeshInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeshInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateMeshInstanceRequest) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMeshInstanceRequest) GetK8SConfig() []byte {
	if x != nil {
		return x.K8SConfig
	}
	return nil
}

func (x *CreateMeshInstanceRequest) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

type CreateMeshInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMeshInstanceResponse) Reset() {
	*x = CreateMeshInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeshInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeshInstanceResponse) ProtoMessage() {}

func (x *CreateMeshInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeshInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateMeshInstanceResponse) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{1}
}

type MeshNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeshNameRequest) Reset() {
	*x = MeshNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshNameRequest) ProtoMessage() {}

func (x *MeshNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshNameRequest.ProtoReflect.Descriptor instead.
func (*MeshNameRequest) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{2}
}

type MeshNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MeshNameResponse) Reset() {
	*x = MeshNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshNameResponse) ProtoMessage() {}

func (x *MeshNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshNameResponse.ProtoReflect.Descriptor instead.
func (*MeshNameResponse) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{3}
}

func (x *MeshNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ApplyRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpName      string `protobuf:"bytes,1,opt,name=opName,proto3" json:"opName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	CustomBody  string `protobuf:"bytes,4,opt,name=custom_body,json=customBody,proto3" json:"custom_body,omitempty"`
	DeleteOp    bool   `protobuf:"varint,5,opt,name=delete_op,json=deleteOp,proto3" json:"delete_op,omitempty"`
	OperationId string `protobuf:"bytes,6,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *ApplyRuleRequest) Reset() {
	*x = ApplyRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRuleRequest) ProtoMessage() {}

func (x *ApplyRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRuleRequest.ProtoReflect.Descriptor instead.
func (*ApplyRuleRequest) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{4}
}

func (x *ApplyRuleRequest) GetOpName() string {
	if x != nil {
		return x.OpName
	}
	return ""
}

func (x *ApplyRuleRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ApplyRuleRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ApplyRuleRequest) GetCustomBody() string {
	if x != nil {
		return x.CustomBody
	}
	return ""
}

func (x *ApplyRuleRequest) GetDeleteOp() bool {
	if x != nil {
		return x.DeleteOp
	}
	return false
}

func (x *ApplyRuleRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type ApplyRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *ApplyRuleResponse) Reset() {
	*x = ApplyRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRuleResponse) ProtoMessage() {}

func (x *ApplyRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRuleResponse.ProtoReflect.Descriptor instead.
func (*ApplyRuleResponse) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ApplyRuleResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type SupportedOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SupportedOperationsRequest) Reset() {
	*x = SupportedOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedOperationsRequest) ProtoMessage() {}

func (x *SupportedOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedOperationsRequest.ProtoReflect.Descriptor instead.
func (*SupportedOperationsRequest) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{6}
}

type SupportedOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ops   []*SupportedOperation `protobuf:"bytes,1,rep,name=ops,proto3" json:"ops,omitempty"`
	Error string                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SupportedOperationsResponse) Reset() {
	*x = SupportedOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedOperationsResponse) ProtoMessage() {}

func (x *SupportedOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedOperationsResponse.ProtoReflect.Descriptor instead.
func (*SupportedOperationsResponse) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{7}
}

func (x *SupportedOperationsResponse) GetOps() []*SupportedOperation {
	if x != nil {
		return x.Ops
	}
	return nil
}

func (x *SupportedOperationsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SupportedOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value    string     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Category OpCategory `protobuf:"varint,3,opt,name=category,proto3,enum=meshes.OpCategory" json:"category,omitempty"`
}

func (x *SupportedOperation) Reset() {
	*x = SupportedOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedOperation) ProtoMessage() {}

func (x *SupportedOperation) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedOperation.ProtoReflect.Descriptor instead.
func (*SupportedOperation) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{8}
}

func (x *SupportedOperation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SupportedOperation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SupportedOperation) GetCategory() OpCategory {
	if x != nil {
		return x.Category
	}
	return OpCategory_INSTALL
}

type EventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventsRequest) Reset() {
	*x = EventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsRequest) ProtoMessage() {}

func (x *EventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsRequest.ProtoReflect.Descriptor instead.
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{9}
}

type EventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType   EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=meshes.EventType" json:"event_type,omitempty"`
	Summary     string    `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Details     string    `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	OperationId string    `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meshops_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshops_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_meshops_proto_rawDescGZIP(), []int{10}
}

func (x *EventsResponse) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_INFO
}

func (x *EventsResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *EventsResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *EventsResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

var File_meshops_proto protoreflect.FileDescriptor

var file_meshops_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x38, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x38, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x10, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x61, 0x0a, 0x1b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x03, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x70, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x4f, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x2a,
	0x5a, 0x0a, 0x0a, 0x4f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x41,
	0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x04, 0x2a, 0x2a, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x32, 0x9b, 0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x13, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meshops_proto_rawDescOnce sync.Once
	file_meshops_proto_rawDescData = file_meshops_proto_rawDesc
)

func file_meshops_proto_rawDescGZIP() []byte {
	file_meshops_proto_rawDescOnce.Do(func() {
		file_meshops_proto_rawDescData = protoimpl.X.CompressGZIP(file_meshops_proto_rawDescData)
	})
	return file_meshops_proto_rawDescData
}

var file_meshops_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_meshops_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_meshops_proto_goTypes = []interface{}{
	(OpCategory)(0),                     // 0: meshes.OpCategory
	(EventType)(0),                      // 1: meshes.EventType
	(*CreateMeshInstanceRequest)(nil),   // 2: meshes.CreateMeshInstanceRequest
	(*CreateMeshInstanceResponse)(nil),  // 3: meshes.CreateMeshInstanceResponse
	(*MeshNameRequest)(nil),             // 4: meshes.MeshNameRequest
	(*MeshNameResponse)(nil),            // 5: meshes.MeshNameResponse
	(*ApplyRuleRequest)(nil),            // 6: meshes.ApplyRuleRequest
	(*ApplyRuleResponse)(nil),           // 7: meshes.ApplyRuleResponse
	(*SupportedOperationsRequest)(nil),  // 8: meshes.SupportedOperationsRequest
	(*SupportedOperationsResponse)(nil), // 9: meshes.SupportedOperationsResponse
	(*SupportedOperation)(nil),          // 10: meshes.SupportedOperation
	(*EventsRequest)(nil),               // 11: meshes.EventsRequest
	(*EventsResponse)(nil),              // 12: meshes.EventsResponse
}
var file_meshops_proto_depIdxs = []int32{
	10, // 0: meshes.SupportedOperationsResponse.ops:type_name -> meshes.SupportedOperation
	0,  // 1: meshes.SupportedOperation.category:type_name -> meshes.OpCategory
	1,  // 2: meshes.EventsResponse.event_type:type_name -> meshes.EventType
	2,  // 3: meshes.MeshService.CreateMeshInstance:input_type -> meshes.CreateMeshInstanceRequest
	4,  // 4: meshes.MeshService.MeshName:input_type -> meshes.MeshNameRequest
	6,  // 5: meshes.MeshService.ApplyOperation:input_type -> meshes.ApplyRuleRequest
	8,  // 6: meshes.MeshService.SupportedOperations:input_type -> meshes.SupportedOperationsRequest
	11, // 7: meshes.MeshService.StreamEvents:input_type -> meshes.EventsRequest
	3,  // 8: meshes.MeshService.CreateMeshInstance:output_type -> meshes.CreateMeshInstanceResponse
	5,  // 9: meshes.MeshService.MeshName:output_type -> meshes.MeshNameResponse
	7,  // 10: meshes.MeshService.ApplyOperation:output_type -> meshes.ApplyRuleResponse
	9,  // 11: meshes.MeshService.SupportedOperations:output_type -> meshes.SupportedOperationsResponse
	12, // 12: meshes.MeshService.StreamEvents:output_type -> meshes.EventsResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_meshops_proto_init() }
func file_meshops_proto_init() {
	if File_meshops_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meshops_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeshInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeshInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meshops_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meshops_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meshops_proto_goTypes,
		DependencyIndexes: file_meshops_proto_depIdxs,
		EnumInfos:         file_meshops_proto_enumTypes,
		MessageInfos:      file_meshops_proto_msgTypes,
	}.Build()
	File_meshops_proto = out.File
	file_meshops_proto_rawDesc = nil
	file_meshops_proto_goTypes = nil
	file_meshops_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MeshServiceClient is the client API for MeshService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeshServiceClient interface {
	CreateMeshInstance(ctx context.Context, in *CreateMeshInstanceRequest, opts ...grpc.CallOption) (*CreateMeshInstanceResponse, error)
	MeshName(ctx context.Context, in *MeshNameRequest, opts ...grpc.CallOption) (*MeshNameResponse, error)
	ApplyOperation(ctx context.Context, in *ApplyRuleRequest, opts ...grpc.CallOption) (*ApplyRuleResponse, error)
	SupportedOperations(ctx context.Context, in *SupportedOperationsRequest, opts ...grpc.CallOption) (*SupportedOperationsResponse, error)
	StreamEvents(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (MeshService_StreamEventsClient, error)
}

type meshServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMeshServiceClient(cc grpc.ClientConnInterface) MeshServiceClient {
	return &meshServiceClient{cc}
}

func (c *meshServiceClient) CreateMeshInstance(ctx context.Context, in *CreateMeshInstanceRequest, opts ...grpc.CallOption) (*CreateMeshInstanceResponse, error) {
	out := new(CreateMeshInstanceResponse)
	err := c.cc.Invoke(ctx, "/meshes.MeshService/CreateMeshInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshServiceClient) MeshName(ctx context.Context, in *MeshNameRequest, opts ...grpc.CallOption) (*MeshNameResponse, error) {
	out := new(MeshNameResponse)
	err := c.cc.Invoke(ctx, "/meshes.MeshService/MeshName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshServiceClient) ApplyOperation(ctx context.Context, in *ApplyRuleRequest, opts ...grpc.CallOption) (*ApplyRuleResponse, error) {
	out := new(ApplyRuleResponse)
	err := c.cc.Invoke(ctx, "/meshes.MeshService/ApplyOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshServiceClient) SupportedOperations(ctx context.Context, in *SupportedOperationsRequest, opts ...grpc.CallOption) (*SupportedOperationsResponse, error) {
	out := new(SupportedOperationsResponse)
	err := c.cc.Invoke(ctx, "/meshes.MeshService/SupportedOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshServiceClient) StreamEvents(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (MeshService_StreamEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MeshService_serviceDesc.Streams[0], "/meshes.MeshService/StreamEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &meshServiceStreamEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MeshService_StreamEventsClient interface {
	Recv() (*EventsResponse, error)
	grpc.ClientStream
}

type meshServiceStreamEventsClient struct {
	grpc.ClientStream
}

func (x *meshServiceStreamEventsClient) Recv() (*EventsResponse, error) {
	m := new(EventsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MeshServiceServer is the server API for MeshService service.
type MeshServiceServer interface {
	CreateMeshInstance(context.Context, *CreateMeshInstanceRequest) (*CreateMeshInstanceResponse, error)
	MeshName(context.Context, *MeshNameRequest) (*MeshNameResponse, error)
	ApplyOperation(context.Context, *ApplyRuleRequest) (*ApplyRuleResponse, error)
	SupportedOperations(context.Context, *SupportedOperationsRequest) (*SupportedOperationsResponse, error)
	StreamEvents(*EventsRequest, MeshService_StreamEventsServer) error
}

// UnimplementedMeshServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeshServiceServer struct {
}

func (*UnimplementedMeshServiceServer) CreateMeshInstance(context.Context, *CreateMeshInstanceRequest) (*CreateMeshInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeshInstance not implemented")
}
func (*UnimplementedMeshServiceServer) MeshName(context.Context, *MeshNameRequest) (*MeshNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MeshName not implemented")
}
func (*UnimplementedMeshServiceServer) ApplyOperation(context.Context, *ApplyRuleRequest) (*ApplyRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyOperation not implemented")
}
func (*UnimplementedMeshServiceServer) SupportedOperations(context.Context, *SupportedOperationsRequest) (*SupportedOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SupportedOperations not implemented")
}
func (*UnimplementedMeshServiceServer) StreamEvents(*EventsRequest, MeshService_StreamEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamEvents not implemented")
}

func RegisterMeshServiceServer(s *grpc.Server, srv MeshServiceServer) {
	s.RegisterService(&_MeshService_serviceDesc, srv)
}

func _MeshService_CreateMeshInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMeshInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshServiceServer).CreateMeshInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshes.MeshService/CreateMeshInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshServiceServer).CreateMeshInstance(ctx, req.(*CreateMeshInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshService_MeshName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeshNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshServiceServer).MeshName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshes.MeshService/MeshName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshServiceServer).MeshName(ctx, req.(*MeshNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshService_ApplyOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshServiceServer).ApplyOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshes.MeshService/ApplyOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshServiceServer).ApplyOperation(ctx, req.(*ApplyRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshService_SupportedOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupportedOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshServiceServer).SupportedOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshes.MeshService/SupportedOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshServiceServer).SupportedOperations(ctx, req.(*SupportedOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshService_StreamEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MeshServiceServer).StreamEvents(m, &meshServiceStreamEventsServer{stream})
}

type MeshService_StreamEventsServer interface {
	Send(*EventsResponse) error
	grpc.ServerStream
}

type meshServiceStreamEventsServer struct {
	grpc.ServerStream
}

func (x *meshServiceStreamEventsServer) Send(m *EventsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MeshService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "meshes.MeshService",
	HandlerType: (*MeshServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMeshInstance",
			Handler:    _MeshService_CreateMeshInstance_Handler,
		},
		{
			MethodName: "MeshName",
			Handler:    _MeshService_MeshName_Handler,
		},
		{
			MethodName: "ApplyOperation",
			Handler:    _MeshService_ApplyOperation_Handler,
		},
		{
			MethodName: "SupportedOperations",
			Handler:    _MeshService_SupportedOperations_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamEvents",
			Handler:       _MeshService_StreamEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "meshops.proto",
}
